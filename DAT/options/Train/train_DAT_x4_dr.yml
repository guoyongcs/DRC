# general settings
name: train_DAT_dr_x4
model_type: DATModel
scale: 4
num_gpu: auto
manual_seed: 10

# dataset and data loader settings
datasets:
  train:
    task: SR
    name: DF2K
    type: PairedImageDataset
    dataroot_gt: /data_root/dataset/sr/DF2K/DF2K_HR
    dataroot_lq: /data_root/dataset/sr/DF2K/DF2K_LR_bicubic/X4
    filename_tmpl: '{}x4'
    io_backend:
      type: disk

    gt_size: 256
    use_hflip: true
    use_rot: true

    # data loader
    use_shuffle: True
    num_worker_per_gpu: 12
    batch_size_per_gpu: 8
    dataset_enlarge_ratio: 1
    prefetch_mode: ~

  val:
    task: SR
    name: Set5
    type: PairedImageDataset
    dataroot_gt: /data_root/dataset/sr/benchmark/Set5/HR
    dataroot_lq: /data_root/dataset/sr/benchmark/Set5/LR_bicubic/X4
    filename_tmpl: '{}x4'
    io_backend:
      type: disk


# network structures
network_g:
  type: DAT
  upscale: 4
  in_chans: 3
  img_size: 64
  img_range: 1.
  split_size: [8,32]
  depth: [6,6,6,6,6,6]
  embed_dim: 180
  num_heads: [6,6,6,6,6,6]
  expansion_factor: 4
  resi_connection: '1conv'
  dual: True

# path
path:
#  pretrain_network_g: experiments/pretrained_models/DAT/DAT_x2.pth # save half of training time if we finetune from x2 and halve initial lr.
  pretrain_network_g: experiments/train_DAT_x4/models/net_g_15000.pth # change it to the pretrained model
  strict_load_g: False
  resume_state: ~

auto_resume: True

# training settings
train:
  optim_g:
    type: Adam
    lr: !!float 2e-4
    weight_decay: 0
    betas: [0.9, 0.99]

  scheduler:
    type: MultiStepLR
     milestones: [ 250000, 400000, 450000, 475000 ]
    gamma: 0.5

  total_iter: 500000
  warmup_iter: 4000  # no warm up

  # losses
  pixel_opt:
    type: L1Loss
    loss_weight: 1.0
    reduction: mean

  dual_weight: 0.1

# validation settings
val:
  val_freq: !!float 5e3
  save_img: False

  metrics:
    psnr: # metric name, can be arbitrary
      type: calculate_psnr
      crop_border: 4
      test_y_channel: True

# logging settings
logger:
  print_freq: 10
  save_checkpoint_freq: !!float 1e3
  use_tb_logger: True
  wandb:
    project: ~
    resume_id: ~

# dist training settings
dist_params:
  backend: nccl
  port: 29500
